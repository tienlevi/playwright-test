name: Comment Playwright Snapshots in PR

on:
  pull_request:
    types: [opened]

jobs:
  comment-snapshots:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm exec playwright test

      - name: List snapshot images from public folder
        id: list_images
        run: |
          if [ -d "public" ]; then
            FILES=$(ls public/*.png | xargs -n1 basename | tr '\n' ',' | sed 's/,$//')
            echo "FILES=$FILES" >> $GITHUB_OUTPUT
          fi

      - name: Commit snapshot images to PR branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/*.png || true
          if git diff --cached --quiet; then
            echo "No new screenshots to commit"
          else
            git commit -m "Add Playwright snapshots"
            git push origin ${{ github.head_ref }}
          fi

      - name: Comment PR with snapshot images
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const files = "${{ steps.list_images.outputs.FILES }}".split(',').filter(Boolean);

            if (files.length === 0) {
              console.log("No snapshots found, skipping comment.");
              return;
            }

            const fullpageImage = files.find(file => file === 'fullpage.png')
            const imageMarkdown = `![${fullpageImage}](https://raw.githubusercontent.com/${context.repo.owner}/${context.repo.repo}/${pr.head.ref}/public/${fullpageImage})`
            const commentBody = `ðŸ§ª **Playwright Snapshot Previews:**\n\n${imageMarkdown}`

            // Get all comments on the PR
            const listComments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
            })

            // Find existing bot comment
            const existingComment = listComments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes(fullpageImage)
            )

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log(`Updated existing comment with ID: ${existingComment.id}`);
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: commentBody
              });
              console.log('Created new comment');
            }
