name: Playwright Snapshots to PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  playwright-snapshots:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: List snapshot images
        id: list_images
        run: |
          mkdir -p snapshots-pr
          find ./playwright-report -type f -name "*.png" -exec cp {} snapshots-pr/ \;
          ls snapshots-pr
          echo "FILES=$(ls snapshots-pr | tr '\n' ',' | sed 's/,$//')" >> $GITHUB_OUTPUT

      - name: Commit snapshots to PR branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p pr-snapshots
          cp snapshots-pr/* pr-snapshots/
          git add pr-snapshots
          if git diff --cached --quiet; then
            echo "No new screenshots"
          else
            git commit -m "Add PR snapshots"
            git push origin HEAD:${{ github.head_ref }}
          fi

      - name: Comment on PR with screenshots
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const files = "${{ steps.list_images.outputs.FILES }}".split(',');
            const imageMarkdown = files.map(file =>
              `![${file}](https://raw.githubusercontent.com/${context.repo.owner}/${context.repo.repo}/${pr.head.ref}/pr-snapshots/${file})`
            ).join('\n\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: `ðŸ§ª **Playwright Snapshots:**\n\n${imageMarkdown}`
            });
